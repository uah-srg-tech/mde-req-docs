import docptl2doc;
import inverseMatrixVDM;
import inverseMatrixTDM;

modeltype doc uses "http://srg.aut.uah.es/micobs/doc/doc";
modeltype doctpl uses "http://srg.aut.uah.es/micobs/doctpl/doctpl";
modeltype srs uses "http://srg.aut.uah.es/micobs/svm/srs";
modeltype tdm uses "http://srg.aut.uah.es/micobs/svm/tdm";
modeltype svs uses "http://srg.aut.uah.es/micobs/svm/svs";
modeltype vdm uses "http://srg.aut.uah.es/micobs/svm/vdm";

transformation generateDoc(in input : svs, out output : doc);

main() {
	input.objects()![svs::VSVSDocument]->map GenerateDoc();
}
mapping svs::VSVSDocument::GenerateDoc() : doc::DDocument {
	result.name := "VCD " + self.name;
	result.id := "VCD " + self.id;
	result.issue := "VCD " + self.issue;
	result.revision := "VCD " + self.revision;
	result.date := "VCD " + self.date;
	
	result.section += self.map GenerateTraceabilityMatricesSection();
}

mapping svs::VSVSDocument::GenerateTraceabilityMatricesSection() : doc::DDSection {
	result.name := "Traceability Matrices";
	
	result.sectionContent += object DDSection {
		name := "SRS Traceability";
		var i : Integer := 1;
		while(i <= self.parents->size()) {
			sectionContent += self.parents->at(i).GenerateInverseTraceabilityMatrix();
			i := i + 1;
		};
	};
	
	result.sectionContent += object DDSection {
		name := "SVS Traceability";
		sectionContent += self.GenerateInverseTraceabilityMatrix();
	};
}