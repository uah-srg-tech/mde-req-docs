modeltype tdm uses "http://srg.aut.uah.es/micobs/svm/tdm";
modeltype vcd uses "http://srg.aut.uah.es/micobs/svm/vcd";

transformation generateVCDT(in input : tdm, out output : vcd);

main() {
	input.objects()![tdm::VTraceableDocument]->map GenerateVCD();
}

mapping tdm::VTraceableDocument::GenerateVCD() : vcd::VVCDList {
	result.doc := self.id;
	
	result.items := self.map GenerateItems();
	result.parentItems := result.items.map GenerateParentItems();
	
}

mapping tdm::VTraceableDocument::GenerateItems() : vcd::VVCDItems {
	var i : Integer := 1;
	while (i <= self.groups->size()) {
		result.item += self.groups->at(i).items.map GetItems();
		i := i + 1;
	};
}

mapping vcd::VVCDItems::GenerateParentItems() : vcd::VVCDParentItems {
	var i : Integer := 1;
	while (i <= self.item->size()) {
	
		var j : Integer := 1;
		while (j <= self.item->at(i).parentRefItem->size()) {
		
			var k : Integer := 1;
			while (k <= result.parentItem->size()) {
				if self.item->at(i).parentRefItem->at(j).name = result.parentItem->at(k).name then {
					//sssItem already exists
					result.parentItem->at(k).refItem += self.item->at(i).GetRefItems();
				}endif;
				k := k + 1;
				
			};
			if k > result.parentItem->size() then {
				//sssItem don't exist
				var item := object VVCDParentItem {};
				item.parentDoc := self.item->at(i).parentRefItem->at(j).parentDoc;
				item.name := self.item->at(i).parentRefItem->at(j).name;
				item.refItem += self.item->at(i).GetRefItems();
				result.parentItem += item;
			}endif;
			j := j + 1;
		};
		i := i + 1;
	};
}

mapping tdm::VTraceableDocumentAbstractItem::GetItems() : vcd::VVCDItem {
	result.name := self.name;
	result.parentRefItem += self.parentItem.GetParentRefItems();
}

helper tdm::VTraceableDocumentAbstractItem::GetParentRefItems() : vcd::VVCDParentRefItem {
	var item := object VVCDParentRefItem {};
	item.parentDoc := self.group.doc.id;
	item.name := self.name;
	return item;
}

helper vcd::VVCDItem::GetRefItems() : vcd::VVCDRefItem {
	var item := object VVCDRefItem {};
	item.name := self.name;
	return item;
}