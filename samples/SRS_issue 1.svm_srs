<SRS name="SRG-EPD ICU Software Requirements Specification" id="SRG-EPD-SRS-001" issue="1" revision="0" date="12/04/2019">
	<parent name="SRG-EPD ICUSW Project" />
	<Introduction>
		<subsection name="Purpose">
			<body>
				<paragraph>
					<run>
						<text>The Software Requirements Specification defines and describes the requirements of the EPD ICU Software of the SRG Mission. The requirements described in this document are derived from </text>
					</run>
					<hyperlink reference="AD1">
					</hyperlink>
					<run>
						<text>.</text>
					</run>
				</paragraph>
			</body>
		</subsection>
		<subsection name="Scope">
			<body>
				<paragraph>
					<run>
						<text>This document applies to the EPD ICU Software of the SRG Mission. It does not provide information for the Ground Support Software (GSS), which is maintained separately as part of the Electronic Ground Support Equipment (EGSE). This document supplies information applicable to the Software Requirements Specification.</text>
					</run>
				</paragraph>
			</body>
		</subsection>
	</Introduction>
	<ApplicableDocuments>
		<ApplicableDocument name="AD1" title="SRG-EPD Software System Specification" id="SRG-EPD-SSS-0001" />
		<ApplicableDocument name="AD2" title="SRG-EPD TM-TC Interface Control Document" id="SRG-EPD-ICD-0001" />
		<ApplicableDocument name="AD3" title="Software" id="ECSS-E-ST-40C" date="06/03/2009" />
		<ApplicableDocument name="AD4" title="Software Product Assurance" id="ECSS-Q-ST-80C" date="06/03/2009" />
		<ApplicableDocument name="AD5" title="SRG-EPD Software Product Assurance Plan" id="SRG-EPD-SPA-0001" />
		<ApplicableDocument name="AD5" title="SRG-EPD Software Development Plan" id="SRG-EPD-SDP-0001" />
	</ApplicableDocuments>
	<ReferenceDocuments>
		<ReferenceDocument name="RD1" title="SRG-EPD Software System Specification" id="SRG-EPD-SSS-0001" />
		<ReferenceDocument name="RD2" title="Ground systems and operations – Telemetry and telecommand packet utilization" id="ECSS-E-ST-70-41C" date="15/04/2016" />
		<ReferenceDocument name="RD3" title="SpaceWire – Links, nodes, routers and networks" id="ECSS-E-ST-50-12A" date="24/01/2003" />
		<ReferenceDocument name="RD4" title="SpaceWire – CCSDS packet transfer protocol" id="ECSS-E-ST-50-53C" />
		<ReferenceDocument name="RD5" title="Space engineering. Electric and electronic" id="ECSS-E-20B" issue="8" revision="0" date="03/2007" />
		<ReferenceDocument name="RD6" title="Spacecraft discrete interfaces" id="ECSS-E-ST-50-14C" />
	</ReferenceDocuments>
	<TermsDefinitionsAbbreviations>
		<Abbreviation name="AD">
			<run>
				<text>Applicable Document</text>
			</run>
		</Abbreviation>
		<Abbreviation name="ASW">
			<run>
				<text>Application Software</text>
			</run>
		</Abbreviation>
		<Abbreviation name="BSW">
			<run>
				<text>Boot Software</text>
			</run>
		</Abbreviation>
		<Abbreviation name="C&amp;DH">
			<run>
				<text>Control and Data Handling</text>
			</run>
		</Abbreviation>
		<Abbreviation name="CDPU">
			<run>
				<text>Common Data Processing Unit</text>
			</run>
		</Abbreviation>
		<Abbreviation name="EGSE">
			<run>
				<text>Electrical Ground Support Equipment</text>
			</run>
		</Abbreviation>
		<Abbreviation name="EPD">
			<run>
				<text>Energetic Particle Detector</text>
			</run>
		</Abbreviation>
		<Abbreviation name="GSS">
			<run>
				<text>Ground Support System</text>
			</run>
		</Abbreviation>
		<Abbreviation name="ICU">
			<run>
				<text>Instrument Control Unit</text>
			</run>
		</Abbreviation>
		<Abbreviation name="IRQ">
			<run>
				<text>Interrupt Request</text>
			</run>
		</Abbreviation>
		<Abbreviation name="FPGA">
			<run>
				<text>Field Programmable Gate Array</text>
			</run>
		</Abbreviation>
		<Abbreviation name="LVPS">
			<run>
				<text>Low Voltage Power Supply</text>
			</run>
		</Abbreviation>
		<Abbreviation name="OBDH">
			<run>
				<text>On-Board Data Handling</text>
			</run>
		</Abbreviation>
		<Abbreviation name="RAM">
			<run>
				<text>Random Access Memory</text>
			</run>
		</Abbreviation>
		<Abbreviation name="RD">
			<run>
				<text>Reference Document</text>
			</run>
		</Abbreviation>
		<Abbreviation name="S/C">
			<run>
				<text>Spacecraft</text>
			</run>
		</Abbreviation>
		<Abbreviation name="SDRAM">
			<run>
				<text>Synchronous Dynamic RAM</text>
			</run>
		</Abbreviation>
		<Abbreviation name="SVVP">
			<run>
				<text>Field Programmable Gate Array</text>
			</run>
		</Abbreviation>
		<Abbreviation name="SW">
			<run>
				<text>Software Verification and Validation Plan</text>
			</run>
		</Abbreviation>
		<Abbreviation name="TBC">
			<run>
				<text>To Be Confirmed</text>
			</run>
		</Abbreviation>
		<Abbreviation name="TC">
			<run>
				<text>Telecommand</text>
			</run>
		</Abbreviation>
		<Abbreviation name="TM">
			<run>
				<text>Telemetry</text>
			</run>
		</Abbreviation>
	</TermsDefinitionsAbbreviations>
	<SoftwareOverview>
		<FunctionPurpose>
			<body>
				<paragraph>
					<run>
						<text>EPD ICU Software purpose is to provide support to EPD sensors. Each of the EPD sensors has some data processing capabilities either by software running in the sensor DPUs/microcontrollers or by logic functions. The main functionality, however, is running in the ICU. The principal functions of the ICU software are:</text>
					</run>
				</paragraph>
				<itemize>
					<listItem>
						<paragraph>
							<run>
								<text>To collect scientific data from the instruments periodically 1 Hz.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To accumulate high-cadence science data from the sensors to specified lower time resolution packages.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To collect housekeeping data from the four units.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To time tag the data if necessary.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To perform lossless compression of the data if necessary.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To format the data for transmission by the S/C.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To accept and syntactically check TC from the S/C.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To deliver these commands to the individual sensors for execution.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To accept from the ground and distribute to the sensors tables and software.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>To handle the burst mode.</text>
							</run>
						</paragraph>
					</listItem>
				</itemize>
				<paragraph>
					<run>
						<text>A Real-Time Operating System is proposed to provide the basic facilities such as multitasking, timing and semaphore/mutex synchronization. A high-level software development tool (UML2, ROOM or similar) could be employed in the software design process.</text>
					</run>
				</paragraph>
				<paragraph>
					<run>
						<text>All software will comply with the following specification, namely:</text>
					</run>
				</paragraph>
				<enumerate>
					<listItem>
						<paragraph>
							<run>
								<text>Different areas of memory will be employed to store code, fixed constants and variable parameters of the in-flight software.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>The PROM memory will include minimum boot software able to manage EEPROM updates and hardware test functions.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>Independent software module memory updates will be supported.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>Instrument safety hazard will be avoided in the software design process.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>On-board software will acquire, store and telemeter the employed resources, including memory usage, central processor unit (CPU) usage and I/O usage.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If a processor reset is detected, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If a processor overload condition is detected, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If an unexpected arithmetic overflow condition is detected, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If an illegal program instruction is encountered during execution of a program code, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If a data bus error is detected by software, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If a memory corruption is detected by an EDAC, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>If a checksum error is detected, an event report will be generated.</text>
							</run>
						</paragraph>
					</listItem>
					<listItem>
						<paragraph>
							<run>
								<text>A modularized structure will be employed in the software design process.</text>
							</run>
						</paragraph>
					</listItem>
				</enumerate>
			</body>
			<subsection name="ICU Software Modes">
				<body>
					<paragraph>
						<run>
							<text>In </text>
						</run>
						<hyperlink reference="ICU_SW_modes"> 
						</hyperlink>
						<run>
							<text> the modes of operation of SRG EPD ICUSW are represented.</text>
						</run>
					</paragraph>
					<figureFromFile name="ICU_SW_modes" referenceFile="ICU_SW_modes.jpg" caption="ICU SW operation modes" />
					<paragraph>
						<run>
							<text>The ICUSW shall be able to support the following modes:</text>
						</run>
					</paragraph>
					<itemize>
						<listItem>
							<paragraph>
								<run>
									<text>OFF: The ICU is not powered.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>BOOT: The ICU is just switched on, a soft reset from other mode has been performed, or a mode transition TC has been received. This mode is in charge of the initial ICU configuration and checking. It also tries to load the application software and pass control to it. The boot software of the ICUSW shall implement the BOOT mode.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>SAFE: is a mode in which EPD is powered but in a safe configuration, which can be maintained indefinitely (e.g. main control unit powered but sensors are off). In this mode EPD will generate only non-science telemetry. The configuration of the instrument in SAFE mode will be unambiguous (i.e. only one defined configuration). The boot software of the ICUSW shall implement the SAFE mode, and it will trigger a transition from BOOT mode to SAFE mode when application software cannot be executed. In SAFE mode the damaged application software images stored in EEPROM can be restored by means of patch telecommands.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>CONFIGURATION: this mode shall be used for required operations to activate or configure the instrument. In this mode non-science data may be generated, depending on the instrument configuration (e.g. sensors activated or not).</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>OPERATIONAL: this mode is the mode in which EPD is fully operative and generates non-science as well as science data.</text>
								</run>
							</paragraph>
						</listItem>
					</itemize>
					<paragraph>
						<run>
							<text>Autonomous transitions are the following:</text>
						</run>
					</paragraph>
					<itemize>
						<listItem>
							<paragraph>
								<run>
									<text>BOOT to CONFIGURATION. This transition is triggered autonomously after a reset when application software is correctly loaded, the target mode is CONFIGURATION, and the control is passed to it.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>BOOT to OPERATIONAL. This transition is triggered autonomously after a reset when application software is correctly loaded, the target mode is OPERATIONAL, and the control is passed to it.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>BOOT to SAFE. This transition is triggered when application software cannot be loaded and the boot software remains in control of the ICU.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>SAFE to BOOT. This transition is triggered by a soft reset (fatal error detected such as bus error, memory access error, etc.) or a TC.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>CONFIGURATION to BOOT. This transition is triggered by a soft reset (fatal error detected such as bus error, memory access error, etc.), by a recovery action (minor error detected such as driver or controller error etc.) or a TC.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>OPERATIONAL to BOOT. This transition is triggered by a soft reset (fatal error detected such as bus error, memory access error, etc.), by a recovery action (minor error detected such as driver or controller error etc.) or a TC.</text>
								</run>
							</paragraph>
						</listItem>
					</itemize>
				</body>
			</subsection>
		</FunctionPurpose>
		<EnvironmentalConsiderations>
			<body>
				<paragraph>
					<run>
						<text>This section provides an overview of the key hardware components. This section is intended for information only, and does not describe all of the details of the various items.</text>
						
					</run>
				</paragraph>
			</body>
			<subsection name="General Description">
				<body>
					<paragraph>
						<hyperlink reference="ICU_IF">
						</hyperlink>
						<run>
							<text>Illustrates the top-level interfaces that affect the EPD Instrument Control Unit Software.</text>
						</run>
					</paragraph>
					<figureFromFile name="ICU_IF" referenceFile="ICU_IF.jpg" caption="ICU interfaces" />
					<paragraph>
						<run>
							<text>EPD ICU provides the interface between the SRG Spacecraft C&amp;DH system and the EPD sensors. All information transfer between the EPD sensors and the Spacecraft/Ground flows through the ICU, including telemetry, commands and status. The EPD sensors communicate with the EPD ICU over a dedicated serial interface.</text>
						</run>
					</paragraph>
				</body>
			</subsection>
			<subsection name="Hardware Overview">
				<body>
					<paragraph>
						<run>
							<text>The EPD ICU is composed by the CDPU and the LVPS. Both units are redundant, working in a cold configuration. Thus we have the CDPU/LVPS nominal unit and the CDPU/LVPS redundant unit. According to the cold redundancy configuration pattern, if one unit is switched ON, the other must be OFF.</text>
						</run>
						<hyperlink reference="ICU_HW_schema">
						</hyperlink>
						<run>
							<text> shows the basic HW diagram of the EPD's ICU.</text>
						</run>
					</paragraph>
					<figureFromFile name="ICU_HW_schema" referenceFile="ICU_HW_schema.jpg" caption="ICU hardware schema" />
					<paragraph>
						<run>
							<text>As it can be observed, the design is based on a FPGA that includes a LEON2 soft processor, the UART-LVDS links with the sensors, the SpaceWire cores and the interfaces with the LVPS and the memory.</text>
						</run>
					</paragraph>
				</body>
			</subsection>
		</EnvironmentalConsiderations>
		<RelationOtherSystems>
			<subsection name="User Interfaces">
				<body>
					<paragraph>
						<run>
							<text>The EPD Instrument has no direct in-flight human user interfaces. The Mission Operation Center (MOC) manages all human interaction with EPD.</text>
						</run>
					</paragraph>
				</body>
			</subsection>
			<subsection name="Hardware Interfaces">
				<body>
					<paragraph>
						<run>
							<text>The detailed EPD's ICU hardware to software interfaces are shown in </text>
						</run>
						<hyperlink reference="ICU_HW_IFs">
						</hyperlink>
						<run>
							<text>.</text>
						</run>
					</paragraph>
					<figureFromFile name="ICU_HW_IFs" referenceFile="ICU_HW_IFs.jpg" caption="ICU hardware interfaces" />
				</body>
			</subsection>
			<subsection name="External Software Interfaces">
				<body>
					<paragraph>
						<run>
							<text>SRG EPD's ICU uses the RTEMS operating system to perform task control functions and provide some resource management services.</text>
						</run>
					</paragraph>
					<paragraph>
						<run>
							<text>ICU is planning on using the following capabilities of RTEMS:</text>
						</run>
					</paragraph>
					<paragraph>
						<run>
							<text>A detailed list of each used function is provided in the SRG EPD ICU Software Detailed Design Document.</text>
						</run>
					</paragraph>
					<itemize>
						<listItem>
							<paragraph>
								<run>
									<text>Prioritized, preemptive task scheduler.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>Inter-process communication.</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>Resource locks (semaphores).</text>
								</run>
							</paragraph>
						</listItem>
						<listItem>
							<paragraph>
								<run>
									<text>Timers.</text>
								</run>
							</paragraph>
						</listItem>
					</itemize>
				</body>
			</subsection>
			<subsection name="Communication Interfaces">
				<subsection name="Sensor Interface">
					<body>
						<paragraph>
							<run>
								<text>All EPD sensors commands and telemetry are communicated via UART protocol at 115200 bauds using Low-Voltage Differential Signalling (LVDS).</text>
							</run>
						</paragraph>
					</body>
				</subsection>
				<subsection name="S/C Interface">
					<body>
						<paragraph>
							<run>
								<text>Each CDPU is a remote terminal on the spacecraft SpaceWire link. The implementation will be compliant up to the RD2 and RD3. Two separate SpaceWire links in a hot redundant configuration will be employed. SpaceWire is the command and data interface with the S/C.</text>
							</run>
						</paragraph>
						<paragraph>
							<run>
								<text>EPD command messages are contained in CCSDS telecommand packets. EPD CDPU strips off the CCSDS packet headers and analyzes the destination identifier. If the identifier is associated to the CDPU, the telecommand is processed directly by the CDPU. If the identifier is associated to any sensor, the CDPU forward the command to the specific sensor. Command responses from the sensor are sent to the CDPU that transmits them to the S/C in CCSDS telemetry packets format. Command responses generated by the CDPU itself are also CCSDS formatted and transmitted to the S/C.</text>
							</run>
						</paragraph>
						<paragraph>
							<run>
								<text>The list of telecommands and telecommands responses are defined in AD2.</text>
							</run>
						</paragraph>
						<paragraph>
							<run>
								<text>Transfer of data and command response from CDPU to the S/C shall take place according to the CCSDS recommendations defined in RD1 and RD2.</text>
							</run>
						</paragraph>
					</body>
				</subsection>
				<subsection name="LVPS Interface">
					<body>
						<paragraph>
							<run>
								<text>The interface between the CDPU and the LVPS is an internal interface. It is used to switch ON/OFF the sensors and to monitor voltages and currents.</text>
							</run>
						</paragraph>
					</body>
				</subsection>
			</subsection>
			<subsection name="Time">
				<body>
					<paragraph>
						<run>
							<text>The Orbiter DMS maintains a time code pattern as Spacecraft Elapsed Time (SCET). The SCET is considered as the Central Time Reference (CTR) and it is used as on-board reference for the correlation of time on Ground. The Central Time Reference (CTR) is maintained at spacecraft level and distributed to the Instruments in order to synchronize instruments and allow instruments to time-stamp their telemetry packets. The CDPU receives the time from the S/C.</text>
						</run>
					</paragraph>
				</body>
			</subsection>
		</RelationOtherSystems>
		<Constraints>
			<body>
				<paragraph>
					<run>
						<text>N/A</text>
					</run>
				</paragraph>
			</body>
		</Constraints>
	</SoftwareOverview>
	<Requirements>
		<body>
			<paragraph>
				<run>
					<text>In the following paragraphs a lists of software requirements will be included. Every single requirement has the following format:</text>
				</run>
			</paragraph>
			<basicTable name="RequirementsTable">
				<row>
					<cell>
						<paragraph>
							<run>
								<text>Name</text>
							</run>
						</paragraph>
					</cell>
					<cell>
						<paragraph>
							<run>
								<text>SRS-ICUSW XX-YYYY</text>
							</run>
						</paragraph>
					</cell>
				</row>
				<row>
					<cell>
						<paragraph>
							<run>
								<text>Description</text>
							</run>
						</paragraph>
					</cell>
					<cell>
						<paragraph>
							<run>
								<text>Requirement Description</text>
							</run>
						</paragraph>
					</cell>
				</row>
				<row>
					<cell>
						<paragraph>
							<run>
								<text>Validation</text>
							</run>
						</paragraph>
					</cell>
					<cell>
						<paragraph>
							<run>
								<text>Validation Approach</text>
							</run>
						</paragraph>
					</cell>
				</row>
				<row>
					<cell>
						<paragraph>
							<run>
								<text>Parent</text>
							</run>
						</paragraph>
					</cell>
					<cell>
						<paragraph>
							<run>
								<text>Requirement Traceability</text>
							</run>
						</paragraph>
					</cell>
				</row>
			</basicTable>
			<paragraph>
				<run bold="true">
					<text>SRS-ICUSW XX-YYYY: </text>
				</run>
				<run>
					<text>Identifies the requirement. XX is the type of requirement and YYYY is the number used to identify the requirement. Types of requirements are:</text>
				</run>
			</paragraph>
			<itemize>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>GE. </text>
						</run>
						<run>
							<text>General</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>FU. </text>
						</run>
						<run>
							<text>Functional</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>PE. </text>
						</run>
						<run>
							<text>Performance</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>IF. </text>
						</run>
						<run>
							<text>Interface</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>OP. </text>
						</run>
						<run>
							<text>Operational</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>RS. </text>
						</run>
						<run>
							<text>Resources</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>DI. </text>
						</run>
						<run>
							<text>Design and Implementation Constraints</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>SE. </text>
						</run>
						<run>
							<text>Security</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>PO. </text>
						</run>
						<run>
							<text>Portability</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>QU. </text>
						</run>
						<run>
							<text>Quality</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>RE. </text>
						</run>
						<run>
							<text>Reliability</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>MA. </text>
						</run>
						<run>
							<text>Maintainability</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>SA. </text>
						</run>
						<run>
							<text>Safety</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>CD. </text>
						</run>
						<run>
							<text>Configuration and delivery</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>DD. </text>
						</run>
						<run>
							<text>Data definition and database</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>AI. </text>
						</run>
						<run>
							<text>Adaptation and installation</text>
						</run>
					</paragraph>
				</listItem>
			</itemize>
			<paragraph>
				<run>
					<text>Examples:</text>
				</run>
			</paragraph>
			<itemize>
				<listItem>
					<paragraph>
						<run>
							<text>SRS-ICUSW FU-0025</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run>
							<text>SRS-ICUSW PE R-0037</text>
						</run>
					</paragraph>
				</listItem>
			</itemize>
			<paragraph>
				<run bold="true">
					<text>Description: </text>
				</run>
				<run>
					<text>is the text that describes the requirement.</text>
				</run>
			</paragraph>
			<paragraph>
				<run bold="true">
					<text>Validation approach: </text>
				</run>
				<run>
					<text>establishes how the requirement is verified:</text>
				</run>
			</paragraph>
			<itemize>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>R. </text>
						</run>
						<run>
							<text>Review </text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>A. </text>
						</run>
						<run>
							<text>Analysis</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>I. </text>
						</run>
						<run>
							<text>Inspection</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>T. </text>
						</run>
						<run>
							<text>Test</text>
						</run>
					</paragraph>
				</listItem>
				<listItem>
					<paragraph>
						<run bold="true">
							<text>S. </text>
						</run>
						<run>
							<text>Similarity</text>
						</run>
					</paragraph>
				</listItem>
			</itemize>
			<paragraph>
				<run bold="true">
					<text>Parent: </text>
				</run>
				<run>
					<text>contains the list of “software specification” that are cover by the requirement.</text>
				</run>
			</paragraph>
			<paragraph>
				<run>
					<text>For each requirement type, subsections are provided when requirements apply only to boot software or to application software or they are common.</text>
				</run>
			</paragraph>
			<paragraph>
				<run>
					<text>Other subsections or extended descriptions can be also added in order to better organize and clarify the requirements.</text>
				</run>
			</paragraph>
			<paragraph>
				<run>
					<text>Extended descriptions will be added using </text>
				</run>
				<run bold="true">
					<text>D:</text>
				</run>
				<run>
					<text>. Example:</text>
				</run>
			</paragraph>
			<paragraph>
				<run>
					<text>D: The ICU ASW shall handle the telecommand and telemetry according to the following requirements:</text>
				</run>
			</paragraph>
		</body>
		<GeneralRequirements>
			<subsection name="Common requirements">
				<Item name="SRS-ICUSW-GE-010" validationMethod="Review">
					<description>
						<body>
							<paragraph>
								<run>
									<text>The ICU Boot Software (BSW) Development Process shall be compliant to the software standard </text>
								</run>
								<hyperlink reference="AD3">
									<run>
										<text>ECSS-E-ST-40C</text>
									</run>
								</hyperlink>
								<run>
									<text>.</text>
								</run>
							</paragraph>
						</body>
					</description>
					<parentItem name="SSS-ICUSW-GE-010" />
				</Item>
				<Item name="SRS-ICUSW-GE-020" validationMethod="Review">
					<description>
						<body>
							<paragraph>
								<run>
									<text>The ICU Application Software (ASW) Development Process shall be compliant to the software standard </text>
								</run>
								<hyperlink reference="AD3">
									<run>
										<text>ECSS-E-ST-40C</text>
									</run>
								</hyperlink>
								<run>
									<text>.</text>
								</run>
							</paragraph>
						</body>
					</description>
					<parentItem name="SSS-ICUSW-GE-010" />
				</Item>
			</subsection>
		</GeneralRequirements>
		<FunctionalRequirements>
			<subsection name="ASW requirements">
				<body>
					<paragraph>
						<run>
							<text>D: The ICU ASW shall handle the telecommand and telemetry according to the following requirements:</text>
						</run>
					</paragraph>
				</body>
				<Item name="SRS-ICUSW-FU-010" validationMethod="Review">
					<description>
						<body>
							<paragraph>
								<run>
									<text>The ICU-ASW shall store the received telecommands in a FIFO queue</text>
								</run>
							</paragraph>
						</body>
					</description>
					<parentItem name="SSS-ICUSW-CA-010" />
				</Item>
			</subsection>
		</FunctionalRequirements>
		<PerformanceRequirements>
			<subsection name="ASW requirements">
				<body>
					<paragraph>
						<run>
							<text>D: The ICU ASW shall handle the received telecommands according to the following requirements:</text>
						</run>
					</paragraph>
				</body>
				<Item name="SRS-ICUSW-PE-010" validationMethod="Analysis">
					<description>
						<body>
							<paragraph>
								<run>
									<text>The ICU-ASW shall retrieve the stored telecommands from the FIFO queue and accept them within an interval of 1 second after its reception.</text>
								</run>
							</paragraph>
						</body>
					</description>
					<parentItem name="SSS-ICUSW-CA-010" />
				</Item>
			</subsection>
		</PerformanceRequirements>
		<InterfaceRequirements>
			<subsection name="ASW requirements">
				<body>
					<paragraph>
						<run>
							<text>D: The ICUSW will handle the Telecommand Verification Service 1 according to the following requirements:</text>
						</run>
					</paragraph>
				</body>
				<Item name="SRS-ICUSW-IF-010" validationMethod="Testing">
					<description>
						<body>
							<paragraph>
								<run>
									<text>The ICU-ASW shall generate a PUS TM (1.1) as result of the telecommand acceptance.</text>
								</run>
							</paragraph>
						</body>
					</description>
					<parentItem name="SSS-ICUSW-IF-010" />
				</Item>
				<Item name="SRS-ICUSW-IF-020" validationMethod="Testing">
					<description>
						<body>
							<paragraph>
								<run>
									<text>The ICU-ASW shall generate a PUS TM (1.2) as result of the telecommand rejection.</text>
								</run>
							</paragraph>
						</body>
					</description>
					<parentItem name="SSS-ICUSW-IF-010" />
				</Item>
			</subsection>
		</InterfaceRequirements>
		<OperationalRequirements>
		</OperationalRequirements>
		<ResourcesRequirements>
		</ResourcesRequirements>
		<DesignRequirements>
		</DesignRequirements>
		<SecurityPrivacyRequirements>
		</SecurityPrivacyRequirements>
		<PortabilityRequirements>
		</PortabilityRequirements>
		<SWQualityRequirements>
		</SWQualityRequirements>
		<SWReliabiltyRequirements>
		</SWReliabiltyRequirements>
		<SWMaintainabilityRequirements>
		</SWMaintainabilityRequirements>
		<SWSafetyRequirements>
		</SWSafetyRequirements>
		<SWConfigurationDeliveryRequirements>
		</SWConfigurationDeliveryRequirements>
		<DataDefinitionDBRequirements>
		</DataDefinitionDBRequirements>
		<HumanFactorsRequirements>
		</HumanFactorsRequirements>
		<AdaptationInstallationRequirements>
		</AdaptationInstallationRequirements>
	</Requirements>
	<LogicalModels>
	</LogicalModels>
</SRS>